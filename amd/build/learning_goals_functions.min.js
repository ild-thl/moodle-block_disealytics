define("block_disealytics/learning_goals_functions",["exports","core/ajax","./update_view","./view_selection","./add_interaction"],(function(_exports,_ajax,_update_view,_view_selection,_add_interaction){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_exports.initGoalEventListeners=function(){const showGoalFormBtn=document.getElementById("show-goal-form"),createGoalForm=document.getElementById("create-goal-container"),saveGoalBtn=document.getElementById("save-goal"),cancelGoalBtn=document.getElementById("cancel-goal"),goalLimitBtn=document.getElementById("goal-limit"),goalsInvalidBtns=document.getElementsByClassName("goal-invalid"),deleteGoalBtns=document.querySelectorAll(".delete-goal"),editGoalsBtn=document.getElementById("edit-goals"),learningGoalProgress=document.getElementById("learning-goals-progress");learningGoalProgress&&Number(learningGoalProgress.getAttribute("max"))>=30&&(goalLimitBtn.classList.remove("hidden"),showGoalFormBtn.classList.add("hidden"));showGoalFormBtn&&showGoalFormBtn.addEventListener("click",(function(){createGoalForm.classList.remove("hidden")}));saveGoalBtn&&saveGoalBtn.addEventListener("click",(function(){!async function(){try{const goalNameInput=document.getElementById("goal-name-input").value,selectedDate=document.getElementById("goal-due-date-input").value,selectedTime=document.getElementById("goal-due-time-input").value,combinedDateTimeString="".concat(selectedDate,"T").concat(selectedTime),combinedDateTime=new Date(combinedDateTimeString);if(validateInputs("new",goalNameInput,combinedDateTime,combinedDateTimeString)){const timestamp=Number(combinedDateTime.getTime()/1e3),courseId=(0,_view_selection.getCourseId)();await new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_add_learning_goal",args:{courseid:courseId,goalname:goalNameInput,duedate:timestamp}}])[0].done((function(){resolve()})).fail((function(err){reject(err)}))})),(0,_update_view.updateView)(courseId,["learning-goals-view"])}}catch(error){window.console.error(error)}}()}));cancelGoalBtn&&cancelGoalBtn.addEventListener("click",(function(){document.getElementById("goal-name-input").value="",initGoalDueDate(),createGoalForm.classList.add("hidden");for(const goalInvalidBtn of goalsInvalidBtns)goalInvalidBtn.classList.add("hidden")}));for(const deleteGoalBtn of deleteGoalBtns)deleteGoalBtn.addEventListener("click",(function(){const goalId=deleteGoalBtn.parentNode.id;var id;id=goalId,new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_delete_learning_goal",args:{goalid:id}}])[0].done((function(){(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["learning-goals-view"]),resolve()})).fail((function(err){window.console.error(err),reject(err)}))}))}));editGoalsBtn&&editGoalsBtn.addEventListener("click",(()=>{editGoalsBtn.querySelector("i").classList.contains("editing-off")?(editGoalsBtn.querySelector("i").classList.remove("editing-off"),editGoalsBtn.querySelector("i").style.color="var(--diseared)"):(editGoalsBtn.querySelector("i").classList.add("editing-off"),editGoalsBtn.querySelector("i").style.color="var(--diseablue)"),setEditingModeForLearningGoals()}))},_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};function setEditingModeForLearningGoals(){const createGoalContainer=document.getElementById("create-goal-container");createGoalContainer.classList.contains("hidden")||createGoalContainer.classList.add("hidden");const accordionContents=document.querySelectorAll(".accordion-content");for(const accordionContent of accordionContents)accordionContent.classList.contains("edit-mode")?(accordionContent.classList.remove("edit-mode"),accordionContent.classList.remove("active")):(accordionContent.classList.add("edit-mode"),accordionContent.classList.add("active"));const goalContents=document.querySelectorAll(".goal-content");for(const goalContent of goalContents){const viewMode=goalContent.querySelector(".goal-view-mode"),editMode=goalContent.querySelector(".goal-edit-mode"),goalsInvalidBtns=goalContent.querySelectorAll(".goal-invalid"),editBtn=goalContent.querySelector("#edit-goal");editBtn.classList.contains("hidden")?editBtn.classList.remove("hidden"):editBtn.classList.add("hidden"),editBtn.addEventListener("click",(()=>{editMode.classList.remove("hidden"),viewMode.classList.add("hidden"),editGoal(goalContent)}));const cancelEditBtn=goalContent.querySelector("#cancel-goal-edit");cancelEditBtn&&cancelEditBtn.addEventListener("click",(()=>{editMode.classList.add("hidden"),viewMode.classList.remove("hidden");for(const goalInvalidBtn of goalsInvalidBtns)goalInvalidBtn.classList.add("hidden")}))}}function initGoalDueDate(){const goalDueDateInput=document.getElementById("goal-due-date-input"),goalDueTimeInput=document.getElementById("goal-due-time-input"),now=new Date,currentDate="".concat(now.getFullYear(),"-").concat((now.getMonth()+1).toString().padStart(2,"0"),"-").concat(now.getDate().toString().padStart(2,"0")),currentTime="".concat(now.getHours().toString().padStart(2,"0"),":").concat(now.getMinutes().toString().padStart(2,"0"));goalDueDateInput&&(goalDueDateInput.value=currentDate,goalDueDateInput.min=currentDate),goalDueTimeInput&&(goalDueTimeInput.value=currentTime)}function validateInputs(goalType,name,dateTime,dateTimeStr){let goalNameMissing,goalDateMissing,goalNameInvalid,goalContent=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,goalsInvalid=document.getElementsByClassName("goal-invalid");if("new"===goalType&&(goalNameMissing=document.getElementById("goal-name-missing"),goalDateMissing=document.getElementById("goal-date-missing"),goalNameInvalid=document.getElementById("goal-name-invalid")),"update"===goalType&&(goalNameMissing=goalContent.querySelector("#edit-goal-name-missing"),goalDateMissing=goalContent.querySelector("#edit-goal-date-missing"),goalNameInvalid=goalContent.querySelector("#edit-goal-name-invalid")),""===name.trim()){for(const goalInvalid of goalsInvalid)goalInvalid.classList.add("hidden");return goalNameMissing.classList.remove("hidden"),!1}if(!/^[a-zA-Z0-9\s!?äöüÄÖÜßéè]+$/.test(name)){for(const goalInvalid of goalsInvalid)goalInvalid.classList.add("hidden");return goalNameInvalid.classList.remove("hidden"),!1}if(!dateTimeStr||isNaN(dateTime)){for(const goalInvalid of goalsInvalid)goalInvalid.classList.add("hidden");return goalDateMissing.classList.remove("hidden"),!1}return!0}function editGoal(goalContent){const goalId=goalContent.getAttribute("data-goal-id"),goalName=goalContent.querySelector(".goal-name"),goalTimestamp=goalContent.getAttribute("data-goal-timestamp"),goalStatus=goalContent.getAttribute("finished"),goalSetNameInput=goalContent.querySelector("#goal-set-name-input");goalSetNameInput.value=goalName.innerText;const originalDate=new Date(1e3*goalTimestamp),goalSetDateInput=goalContent.querySelector("#goal-set-date-input"),goalSetTimeInput=goalContent.querySelector("#goal-set-time-input");goalSetDateInput.value=originalDate.toISOString().slice(0,10),goalSetDateInput.min=originalDate.toISOString().slice(0,10),goalSetTimeInput.value=originalDate.toISOString().slice(11,16);const saveEditBtn=goalContent.querySelector("#save-goal-edit");saveEditBtn&&saveEditBtn.addEventListener("click",(async function(){const updatedName=goalSetNameInput.value,updatedDate=goalSetDateInput.value,updatedTime=goalSetTimeInput.value,combinedDateTimeString="".concat(updatedDate,"T").concat(updatedTime),combinedDateTime=new Date(combinedDateTimeString);if(validateInputs("update",updatedName,combinedDateTime,combinedDateTimeString,goalContent)){const updatedTimestamp=Number(combinedDateTime.getTime()/1e3);await updateGoal(goalId,updatedName,updatedTimestamp,goalStatus).then((()=>setEditingModeForLearningGoals()))}}))}async function updateGoal(id,name,date,finished){return new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_update_learning_goal",args:{goalid:id,goalname:name,duedate:date,finished:!0===finished?1:0}}])[0].done((function(){(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["learning-goals-view"]),resolve()})).fail((function(err){window.console.error(err),reject(err)}))}))}_exports.init=()=>{initGoalDueDate(),function(){document.querySelectorAll('[data-goal-finished="true"]').forEach((goal=>{goal.querySelector(".goal-checkbox").checked=!0;const name=goal.querySelector(".goal-name"),date=goal.querySelector(".goal-date");name.classList.add("strikethrough"),date.classList.add("strikethrough")}));document.querySelectorAll(".goal-checkbox").forEach((checkbox=>{checkbox.addEventListener("change",(async function(){const id=checkbox.id.replace("goal-",""),goalContent=checkbox.parentNode.parentNode.parentNode,name=goalContent.querySelector(".goal-name"),date=goalContent.querySelector(".goal-date"),dateTimestamp=goalContent.getAttribute("data-goal-timestamp");if(checkbox.checked){name.classList.add("strikethrough"),date.classList.add("strikethrough");try{await updateGoal(id,name.innerText,dateTimestamp,!0)}catch(error){window.console.error(error)}}else{name.classList.remove("strikethrough"),date.classList.remove("strikethrough");try{await updateGoal(id,name.innerText,dateTimestamp,!1)}catch(error){window.console.error(error)}}}))}))}();const accordion=document.getElementById("learning-goals-panel-accordion");document.querySelectorAll("#learning-goals-panel-accordion .accordion-head").forEach(((head,index)=>{"true"!==head.dataset.listenerAttached&&(head.addEventListener("click",(()=>{(0,_add_interaction.toggleAccordion)(accordion,index+1)})),head.dataset.listenerAttached="true")}))}}));

//# sourceMappingURL=learning_goals_functions.min.js.map