define("block_disealytics/planner_functions",["exports","core/ajax","core/str","./update_view","./view_selection","./add_interaction"],(function(_exports,_ajax,_str,_update_view,_view_selection,_add_interaction){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.addEventToPlanner=addEventToPlanner,_exports.deleteEventFromPlanner=deleteEventFromPlanner,_exports.getCombinedDateTime=getCombinedDateTime,_exports.init=void 0,_exports.initAddEventListeners=initAddEventListeners,_exports.initButtonsInPlannerForm=initButtonsInPlannerForm,_exports.initDeleteEventListeners=initDeleteEventListeners,_exports.initPlannerEventListeners=initPlannerEventListeners,_exports.populateDateInputs=populateDateInputs,_exports.resetPlannerEventForm=resetPlannerEventForm,_exports.updateMonthDisplay=updateMonthDisplay,_exports.validateInputs=validateInputs,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};let plannerModal=null;async function updateMonthDisplay(){try{const courseId=(0,_view_selection.getCourseId)();document.querySelectorAll(".block_disealytics-planner-left-side").forEach((planner=>{const day=parseInt(planner.getAttribute("data-day"),10),month=parseInt(planner.getAttribute("data-month"),10),year=parseInt(planner.getAttribute("data-year"),10);planner.querySelectorAll(".select-month-btn").forEach((navigateBtn=>{navigateBtn.addEventListener("click",(async()=>{const direction=navigateBtn.classList.contains("select-next-month")?"forwards":"backwards";await new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_change_planner_view",args:{courseid:courseId,day:day,month:month,year:year,direction:direction}}])[0].done((()=>{resolve()})).fail((err=>{reject(err)}))})),await(0,_update_view.updateView)(courseId,["planner-view"])}))}))}))}catch(error){window.console.error(error)}}function initButtonsInPlannerForm(){const plannerNoEnd=document.getElementById("planner-no-end-input"),plannerWithEnd=document.getElementById("planner-until-input"),plannerDuration=document.getElementById("planner-duration-input"),plannerRepetitions=document.getElementById("planner-event-repetitions-input-checkbox");plannerNoEnd&&plannerNoEnd.addEventListener("change",(()=>{document.getElementById("planner-date-end-input").disabled=!0,document.getElementById("planner-time-end-input").disabled=!0,document.getElementById("planner-duration-text").disabled=!0})),plannerWithEnd&&plannerWithEnd.addEventListener("change",(()=>{document.getElementById("planner-date-end-input").disabled=!1,document.getElementById("planner-time-end-input").disabled=!1,document.getElementById("planner-duration-text").disabled=!0})),plannerDuration&&plannerDuration.addEventListener("change",(()=>{document.getElementById("planner-date-end-input").disabled=!0,document.getElementById("planner-time-end-input").disabled=!0,document.getElementById("planner-duration-text").disabled=!1})),plannerRepetitions&&plannerRepetitions.addEventListener("change",(()=>{document.getElementById("planner-event-repetitions-input").disabled=!plannerRepetitions.checked}))}function initPlannerEventListeners(){const saveDateBtns=document.querySelectorAll(".save-planner-date"),cancelDateBtns=document.querySelectorAll(".cancel-planner-date");saveDateBtns&&saveDateBtns.forEach((saveDateBtn=>{saveDateBtn.addEventListener("click",(async function(){await addEventToPlanner()&&cancelDateBtns.forEach((cancelDateBtn=>{cancelDateBtn.click()}))}))})),cancelDateBtns&&cancelDateBtns.forEach((cancelDateBtn=>{cancelDateBtn.addEventListener("click",(async function(){resetPlannerEventForm()}))}))}function initDeleteEventListeners(){const deleteEventBtns=document.querySelectorAll(".delete-event-from-planner");if(deleteEventBtns)for(const deleteDateBtn of deleteEventBtns)deleteDateBtn.addEventListener("click",(async function(){const dateid=this.id.match(/\d+$/)[0];await deleteEventFromPlanner(dateid)}))}function initAddEventListeners(){const addNewEventBtns=document.querySelectorAll(".block_disealytics-add-new-event-to-planner");addNewEventBtns&&addNewEventBtns.forEach((addNewEventBtn=>{addNewEventBtn.addEventListener("click",(async function(){plannerModal=await(0,_add_interaction.createDiseaModal)("block_disealytics/planner_add_event_modal",(0,_str.get_string)("planner_add_event_modal","block_disealytics"),1),await(0,_add_interaction.showDiseaModal)(plannerModal),await new Promise((resolve=>setTimeout(resolve,500)));populateDateInputs(this.getAttribute("data-date")),initButtonsInPlannerForm(),initPlannerEventListeners()}))}))}function populateDateInputs(clickedDateInput){const[year,month,day]=clickedDateInput.split("/"),dateStartInput=document.getElementById("planner-date-start-input"),timeStartInput=document.getElementById("planner-time-start-input"),dateEndInput=document.getElementById("planner-date-end-input"),timeEndInput=document.getElementById("planner-time-end-input"),clickedDate="".concat(year,"-").concat(month.padStart(2,"0"),"-").concat(day.padStart(2,"0")),now=new Date,currentTime="".concat(now.getHours().toString().padStart(2,"0"),":").concat(now.getMinutes().toString().padStart(2,"0"));dateStartInput.value=clickedDate,dateEndInput.value=clickedDate,timeStartInput.value=currentTime,timeEndInput.value=currentTime}function resetPlannerEventForm(){document.getElementById("planner-event-name-input").value="";const now=new Date,currentDate="".concat(now.getFullYear()," - ").concat((now.getMonth()+1).toString().padStart(2,"0")," - ").concat(now.getDate().toString().padStart(2,"0")),currentTime="".concat(now.getHours().toString().padStart(2,"0"),":").concat(now.getMinutes().toString().padStart(2,"0"));document.getElementById("planner-date-start-input").value=currentDate,document.getElementById("planner-time-start-input").value=currentTime,document.getElementById("planner-date-end-input").value=currentDate,document.getElementById("planner-time-end-input").value=currentTime,document.getElementById("planner-event-location-input").value="",document.getElementById("planner-duration-text").value="90",document.getElementById("planner-no-end-input").checked=!0,document.getElementById("planner-until-input").checked=!1,document.getElementById("planner-duration-input").checked=!1,document.getElementById("planner-event-repetitions-input-checkbox").checked=!1,document.getElementById("planner-event-repetitions-input").value="1",document.getElementById("planner-name-invalid").classList.add("hidden"),document.getElementById("planner-name-missing").classList.add("hidden"),document.getElementById("planner-date-invalid").classList.add("hidden")}function getCombinedDateTime(dateId,timeId){const date=document.getElementById(dateId).value,time=document.getElementById(timeId).value,combinedDateTimeString="".concat(date,"T").concat(time);return new Date(combinedDateTimeString)}async function addEventToPlanner(){try{const name=(0,_add_interaction.getValueById)("planner-event-name-input"),location=(0,_add_interaction.getValueById)("planner-event-location-input"),courseid=(0,_view_selection.getCourseId)(),eventType=(0,_add_interaction.getValueById)("planner-event-type-input"),startDate=getCombinedDateTime("planner-date-start-input","planner-time-start-input"),endDate=getCombinedDateTime("planner-date-end-input","planner-time-end-input"),duration=(0,_add_interaction.getValueById)("planner-duration-text"),repetitionsCheckbox=document.getElementById("planner-event-repetitions-input-checkbox"),repetitions=repetitionsCheckbox.checked?(0,_add_interaction.getValueById)("planner-event-repetitions-input"):0,timestampStart=Math.floor(new Date(startDate).getTime()/1e3);let calculatedDuration=0;if(document.getElementById("planner-until-input").checked){const timestampEnd=Math.floor(new Date(endDate).getTime()/1e3);switch(validateInputs(name,location,startDate,endDate,null,repetitionsCheckbox,repetitions)){case"correct":return calculatedDuration=timestampEnd-timestampStart,await new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_update_planner_event",args:{updatetype:"add",dateid:null,name:name,courseid:courseid,timestart:timestampStart,timeduration:calculatedDuration,location:null===location?"":location,eventtype:null===eventType?"":eventType,repetitions:repetitions}}])[0].done((()=>{resolve()})).fail((err=>{reject(err)}))})),await(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["planner-view"]),!0;case"namemissing":return await showMessage(document.getElementById("planner-name-missing")),!1;case"nameinvalid":return await showMessage(document.getElementById("planner-name-invalid")),!1;case"dateinvalid":return await showMessage(document.getElementById("planner-date-invalid")),!1;case"repetitionsinvalid":return await showMessage(document.getElementById("planner-repetition-invalid")),!1}}else if(document.getElementById("planner-duration-input").checked)switch(validateInputs(name,location,startDate,null,duration,repetitionsCheckbox,repetitions)){case"correct":return calculatedDuration=60*parseInt(duration,10),await new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_update_planner_event",args:{updatetype:"add",dateid:null,name:name,courseid:courseid,timestart:timestampStart,timeduration:calculatedDuration,location:null===location?"":location,eventtype:null===eventType?"":eventType,repetitions:repetitions}}])[0].done((()=>{resolve()})).fail((err=>{reject(err)}))})),await(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["planner-view"]),!0;case"namemissing":return await showMessage(document.getElementById("planner-name-missing")),!1;case"nameinvalid":return await showMessage(document.getElementById("planner-name-invalid")),!1;case"dateinvalid":return await showMessage(document.getElementById("planner-date-invalid")),!1;case"repetitionsinvalid":return await showMessage(document.getElementById("planner-repetition-invalid")),!1}else switch(validateInputs(name,location,startDate,null,null,repetitionsCheckbox,repetitions)){case"correct":return await new Promise(((resolve,reject)=>{_ajax.default.call([{methodname:"block_disealytics_update_planner_event",args:{updatetype:"add",dateid:null,name:name,courseid:courseid,timestart:timestampStart,timeduration:calculatedDuration,location:null===location?"":location,eventtype:null===eventType?"":eventType,repetitions:repetitions}}])[0].done((()=>{resolve()})).fail((err=>{reject(err)}))})),await(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["planner-view"]),!0;case"namemissing":return await showMessage(document.getElementById("planner-name-missing")),!1;case"nameinvalid":return await showMessage(document.getElementById("planner-name-invalid")),!1;case"dateinvalid":return await showMessage(document.getElementById("planner-date-invalid")),!1;case"repetitionsinvalid":return await showMessage(document.getElementById("planner-repetition-invalid")),!1}}catch(error){window.console.error(error)}return!1}function deleteEventFromPlanner(id){_ajax.default.call([{methodname:"block_disealytics_update_planner_event",args:{updatetype:"delete",dateid:id}}])[0].done((async function(){await(0,_update_view.updateView)((0,_view_selection.getCourseId)(),["planner-view"])})).fail((err=>{window.console.log(err)}))}function validateInputs(name,location,startDate){let endDate=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,duration=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,repCheckbox=arguments.length>5&&void 0!==arguments[5]&&arguments[5],repetitions=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const eventsInvalid=document.getElementsByClassName("planner-invalid");for(const event of eventsInvalid)event.classList.add("hidden");if(""===name.trim())return"namemissing";if(!/^[a-zA-Z\d\s!?äöüÄÖÜßéè@./\-:]+$/.test(name))return"nameinvalid";if(""!==location.trim()&&!/^[a-zA-Z\d\s!?äöüÄÖÜßéè@./\-:]+$/.test(location))return"nameinvalid";if(!startDate||isNaN(startDate))return"dateinvalid";if(null!==endDate&&(!endDate||isNaN(endDate)||endDate<=startDate))return"dateinvalid";if(null!==duration){const durationNumber=Number(duration);if(isNaN(durationNumber))return"dateinvalid"}if(repCheckbox&&null!==repetitions){const repNumber=Number(repetitions);if(isNaN(repNumber))return"repetitionsinvalid"}return"correct"}_exports.init=async()=>{await updateMonthDisplay(),initDeleteEventListeners(),initAddEventListeners()};const showMessage=async messageElement=>{messageElement.classList.remove("hidden"),await new Promise((resolve=>setTimeout(resolve,2e3))),messageElement.classList.add("hidden")}}));

//# sourceMappingURL=planner_functions.min.js.map